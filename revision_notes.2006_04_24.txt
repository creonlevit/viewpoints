Notes for the Revision of 24-APR-2006
Paul R Gazis

Overview
  The primary goals of this revision were to modify the executable 
so that it could be invoked from an icon as by the command line, 
create a data file manager class, revise the main menu bar, and 
add the capability to add or remove rows and columns from the plot 
window array.

Changes

vp.cpp -- Data file namagement methods have been moved to a
  separate data_file_manager class.  Main menu bar was modified 
  and the plot window array is now managed by a general-purpose
  manage_plot_window method.  NOTE: This could also subsume the 
  old reload_plot_window method.  The main() method was modifed 
  so that viewpoints can be invoked as a  GUI under WIN32.  NOTE: 
  This modification has NOT been tested under Linux or MacOS.  
  Removed the read and write buttons from the main control panel
  because these seem to make more sense in the main menu bar.
  The following method has been removed:

  create_plot_window_array()

  The following method has been added:

  revise_plot_window_array() -- Revise the plot window array.

data_file_manager.h and data_file_manager.cpp -- The load data,
  read data file, remove trivial columns, and resize global array
  methods were moved from the main routine to a data file manager
  class.  This class reads and writes data files and stores their
  contents in the relevant global variables.  NOTE: The binary
  read method may have to be modified to incorporate Creon's 
  revisions of 18-APR-2006.  This class includes a method to
  create a dummy data set.  This can be used to initialize or fill
  the plot window array when actual data have not been specified 
  or are not available.  This class contains the following 
  methods:

  data_file_manager() -- Constructor
  initialize() -- Initializer
  remove_trivial_columns() -- Remove identical data
  resize_global_arrays() -- Resize global arrays
  load_data_file( *inFileSpec) -- Load and initialize data
  read_ascii_file_with_headers( *inFileSpec) -- Read ASCII
  read_binary_file_with_headers( *inFileSpec) -- Read binary
  create_default_data( nvars_in) -- Create default data
  write_binary_file_with_headers() -- Write binary file

global_definitions_vp.h -- Added global_arc and global_argv for
  use by show( argc, argv) in the the manage_plot_window_array
  method.  WARNING: There must be a better way to do this!

include_libraries_vp.h -- Changes to include more menu-related 
  classes.

plot_window.cpp -- Added a call to show() to the reset window
  widget so that missing windows will be restored.  Other minor 
  changes.  WARNING: It is necessary to turn this off before a
  window is created so that it will be resizable!  I do not
  understand why this is the case.

Known bugs
  1) See notes for global_definitions.h and plot_window.cpp above.
  2) WARNING: There should be more tests for missing data to avoid
     segmentation errors!
  3) Question: Does the lock_axes capability work properly?
  4) The reload_plot_window_array wiodget does not recognize locked
     axes.  This may not be desirable.
  5) When the main() method is invoked, it examines the first
     element, argv[0], of the input parameter array, in an attempt
     to determine if viewpoints was called from the command line.
     This may not be the correct way to do this, and may not work
     under Linux or MacOS!
  6) If every plot window is closed, it appear that all of the 
     GLContext information is destroyed.


Notes for the Revision of 17-APR-2006
Paul R Gazis

Overview
  The main goals of this revision were to add file i/o capability,
add the ability to refresh/restore plot windows, and add a main
menu bar.  These three issues are all related.  To this end, many
of the operations in the main() method were consolidated into
separate functions, most of the constructor for class plot_window
was moved into a separate initializer, and several menu functions
and widgets were added.

Changes

vp.cpp -- window size and position parameters are now defined at
  the beginning of the file rather than spread throughout
  different function calls.  Methods have been added to create
  of handle a main menu bar, functions and widgets have been
  added to read ninary and ascii files via main menu commands  
  or via buttons on the global-widgets part of the control
  panel.  In the process, the following functions have been 
  added.

  make_about_window -- Draw the 'Help|About' window
  create_main_control_panel -- Create main control panel
  create_plot_window_array -- Create the plot window array
  make_main_menu_bar -- Create main menu bar
  read_data -- Widget to read input data
  reload_plot_window_array -- Refresh and reload plot windows

global_definitions_vp.h -- Minor changes

include_libraries_vp.h -- Changes to include menu-related 
  classes

plot_window.h -- Added an 'intialize' method

plot_window.cpp -- Moved initilization operations from the
  constructor to the initialize() method, which is now called
  by the contrstructor.  This method can now be invoked from
  the main routine to refresh plot windows, etc.

Known bugs
  The reload_plot_window_array function will restore plot
windows that have been deleted unless EVERY plot window has
been deleted, in which case the windows will be restored
with the colors set to some default and point selection
disabled.  Could this be because ther GLContext information
is destroyed if all plot windows are closed?


Notes for the revision of 27-MAR-2006
Paul R Gazis

Overview
  This revision involves a substantial reorganization of the
viewpoints code for puposes of clarity, maintainability, and to
consolidate class variables and member functions in the relevant
classes and files to make the code more object-oriented.  In the
long run, this should make the code considerably easier to
understand, maintain, and modify, particularly after its planned
release to the Open Source community.  There are three aspects to
this revision:

  1) The code was divided into several separate (and largely
self-contained) files which are organized on a slightly more
formal basis that the previous version.

  2) 'Global' variables have been collected in a new header file,
'global_defintiions_vp.h', that replaces the original 'vp.H'
header file.  Local variables have been moved to the relevant 
files and their scope has been restriced as much as possible.

  3) As noted above, variables and member functions have been
consolidated to make the plot_window and control_panel_window
classes as self-contained and independant as possible.

  NOTE: With the possiblee exception of toggle_display_delected,
for which the name may have been altered by a typo, no variable or
function names have been altered in this revision!  But several
global variables and functions have been turned into static
variables or methods of the relevant classes, as noted below.

File structure
  This revision breaks the code into several files.  Note that all
of these files except for the main routine contain the necessary
#ifndef, etc., statements to prevent them from being replicaated 
if they are included more than once.  Note also that the source
files for the classes listed below are sufficiently complete that
they WILL compile!

include_libraries_vp.h -- Include statements.  Under ordinary
  circumstances, I would have left these in the relevant header
  files for individual classes, but the includes used by 
  viewpoints are sufficiently numeraous and involved that is makes
  sense to consolidate them into a single file.

global_definitions_vp.h -- Debugging flag and definition, global 
  variables used by all (or almost all) classes and the main 
  method, and member classes such as myCompare.  This replaces
  the original vp.H header file.

Fl_Hor_Value_Slider_Input.H -- Creon Levit's horizontal slider
  widget with additional comments.

control_panel_window.h -- Header for class control_panel_window

plot_window.h -- Header for class plot_window

control_panel_window.cpp -- Source for class control_panel_window

plot_window.cpp -- Source for class plot_window

vp.cpp -- Source for the main routine.

Compilation notes
  It is assumed that compilation of multiple files will be 
handled by #include statements in vp.cpp -- i.e. source code for 
classes control_panel_window and plot_window will be included via 
#include "control_panel_window.cpp" and #include "plot_window.cpp" 
statements in vp.cpp and only vp.cpp will be compiled!  If one 
wishes to compile control_panel_window.cpp, plot_window.cpp, and 
vp.cpp separately and link the object files together explicitly, 
it will be necessary to remove the relevant #includes from vp.cpp
first to avoid confusing the linker with multiple references.

Class structure
  This code consists of a main routine and two self-contained
classes, control_panel_window and plot_window, that make minimal 
use of global variables associated with the main routine.  The 
classes and main routine contain the following methods:

class control_panel_window

  Non-static member functions:
    control_panel_window( w, h) -- Constructor
    maybe_redraw() -- Set redraw flag
    make_widgets( *cpw) -- Make widgets for this tab
    extract_and_redraw() -- ???

  Static functions for access by Fl_Button::callback
    choose_color_selected( *w, *cpw) -- Color of selected points
    static_extract_and_redraw( *w, *cpw) -- ???
    static_maybe_redraw( *w, *cpw) -- Set redraw flag
    replot( *w, *cpw) -- Replot data
    reset_view( *w, *cpw) -- Reset view
    redraw_one_plot( *w, *cpw) -- Redraw one plot


class plot_window

  Non-static member functions:
    plot_window( w, h) -- Constructor
    draw() -- Draw plot
    draw_grid() -- Draw grid
    void draw_axes() -- Draw axes
    draw_data_points() -- Draw data points
    void draw_center_glyph() -- ???
    void update_linked_transforms() -- ???
    handle( event) -- Main event handler
    handle_selection() -- Handle this selection?
    void screen_to_world( xs, ys, x, y) -- Screen to word coords?
    void print_selection_stats() -- ???
    compute_histogram( int) -- Compute a histogram
    draw_histograms() -- Draw histograms
    compute_rank( blitz::Array<float,1>, blitz::Array<int,1>);
    compute_histograms () -- Compute histograms
    normalize() -- Normalize data
    extract_data_points() -- Extract data for these axes
    transform_2d() -- Transofmr to 2D coords
    reset_selection_box() -- Reset selection box
    color_array_from_new_selection() -- ???
    color_array_from_selection() -- Color selected points?
    update_textures() -- ???
    choose_color_selected() -- Choose color of selcted data
    reset_view() -- Reset plot
    redraw_one_plot() -- Redraw one plot
    change_axes( nchange) -- Change axes of this plot

  Static functions moved here from the main routine
    upper_triangle_incr( i, j, nvars) -- Traverse upper triangle
    redraw_all_plots( p) -- Redraw all plots
    delete_selection( *o) -- Delete selcted points
    invert_selection() -- Invert selected and nonselcted points
    toggle_display_delected( *o) -- Toggle colors
    clear_selection( *o) -- Clear selection
    initialize_textures() -- ???


Main routine
  choose_color_deselected( *o) -- Color of nonselected points
  change_all_axes( *o) -- Change all axes
  clearAlphaPlanes() -- Clear alpha planes
  npoints_changed( *o) -- Update number of points changed
  write_data( *o) -- Write binary file
  reset_all_plots( void) -- Reset all plots
  redraw_if_changing( *dummy) -- Redraw changing plots
  make_global_widgets() -- Controls for main control panel
  resize_global_arrays() -- Resize global arrays
  remove_trivial_columns() -- Remove identical data
  read_ascii_file_with_headers( *inFileSpec) -- Read ASCII
  read_binary_file_with_headers( *inFileSpec) -- Read binary
  usage() -- Print help information


